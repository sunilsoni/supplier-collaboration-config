spring:
  profiles:
    active: cloud
---
# Datasource and JPA configuration to be used for storing the OAuth authorization details 
# and token store
spring:
  profiles: development
  datasource:
    url: jdbc:mysql://localhost:3306/apiAuth
    username: root
    password: root
    driver-class: com.mysql.jdbc.Driver
  
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: create

# We need to setup different context root for the auth server so that we can store separate
# cookies for both the API gateway as well as the OAuth2 authorization server.
server:
  port: 8899
  contextPath: /userauth 

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

security:
  sessions: if-required
  user:
    password: password      
---
# Datasource and JPA configuration to be used for storing the OAuth authorization details 
# and token store
spring:
  profiles: cloud
  datasource:
    url: jdbc:mysql://us-cdbr-azure-east2-d.cloudapp.net/apiauthdb
    username: b58cf47a74e0dc
    password: 3d11ba54
    driver-class: com.mysql.jdbc.Driver
  
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: create

# We need to setup different context root for the auth server so that we can store separate
# cookies for both the API gateway as well as the OAuth2 authorization server.
server:
  port: 8899
  contextPath: /userauth 

eureka:
  client:
    serviceUrl:
      defaultZone: http://sc-eureka-server.azurewebsites.net/eureka/

security:
  sessions: if-required
  user:
    password: password      


